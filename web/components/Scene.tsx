/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
author: Seafoam (https://sketchfab.com/seafoam)
license: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
source: https://sketchfab.com/3d-models/smol-ame-in-an-upcycled-terrarium-hololiveen-490cecc249d242188fda5ad3160a4b24
title: Smol Ame in an Upcycled Terrarium [HololiveEn]
*/

import * as THREE from "three";
import React, { useEffect, useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Object_4: THREE.Mesh;
    Object_5: THREE.Mesh;
    Object_37: THREE.SkinnedMesh;
    Object_10: THREE.SkinnedMesh;
    Object_12: THREE.SkinnedMesh;
    Object_14: THREE.SkinnedMesh;
    Object_16: THREE.SkinnedMesh;
    Object_18: THREE.SkinnedMesh;
    Object_19: THREE.SkinnedMesh;
    Object_21: THREE.SkinnedMesh;
    Object_23: THREE.SkinnedMesh;
    Object_25: THREE.SkinnedMesh;
    Object_27: THREE.SkinnedMesh;
    Object_29: THREE.SkinnedMesh;
    Object_31: THREE.SkinnedMesh;
    Object_33: THREE.SkinnedMesh;
    Object_35: THREE.SkinnedMesh;
    Object_39: THREE.SkinnedMesh;
    Object_41: THREE.SkinnedMesh;
    Object_65: THREE.SkinnedMesh;
    Object_67: THREE.SkinnedMesh;
    GLTF_created_0_rootJoint: THREE.Bone;
    GLTF_created_1_rootJoint: THREE.Bone;
  };
  materials: {
    pasokon: THREE.MeshStandardMaterial;
    terrarium1: THREE.MeshStandardMaterial;
    terrarium1ame: THREE.MeshStandardMaterial;
    terrarium1ame: THREE.MeshStandardMaterial;
    terrarium1ameoutline: THREE.MeshStandardMaterial;
    terrarium1: THREE.MeshStandardMaterial;
  };
};

type ActionName = "Animation";
type GLTFActions = Record<ActionName, THREE.AnimationAction>;

export default function Model({ ...props }: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF("/scene.gltf") as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);

  useEffect(() => {
    actions.Animation.play();
  }, [actions]);

  return (
    <group ref={group} {...props} dispose={null}>
      <group>
        <group rotation={[-Math.PI / 2, 0, 0]}>
          <group>
            <group rotation={[Math.PI / 2, 0, 0]}>
              <group>
                <mesh
                  geometry={nodes.Object_4.geometry}
                  material={materials.pasokon}
                />
                <mesh
                  geometry={nodes.Object_5.geometry}
                  material={nodes.Object_5.material}
                />
              </group>
              <group position={[-0.2, 0.9, 0]} rotation={[0, 0.86, 0]}>
                <group>
                  <primitive object={nodes.GLTF_created_0_rootJoint} />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <group />
                  <skinnedMesh
                    name="Object_37"
                    geometry={nodes.Object_37.geometry}
                    material={nodes.Object_37.material}
                    skeleton={nodes.Object_37.skeleton}
                    morphTargetDictionary={
                      nodes.Object_37.morphTargetDictionary
                    }
                    morphTargetInfluences={
                      nodes.Object_37.morphTargetInfluences
                    }
                  />
                  <skinnedMesh
                    geometry={nodes.Object_10.geometry}
                    material={nodes.Object_10.material}
                    skeleton={nodes.Object_10.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_12.geometry}
                    material={nodes.Object_12.material}
                    skeleton={nodes.Object_12.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_14.geometry}
                    material={nodes.Object_14.material}
                    skeleton={nodes.Object_14.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_16.geometry}
                    material={nodes.Object_16.material}
                    skeleton={nodes.Object_16.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_18.geometry}
                    material={nodes.Object_18.material}
                    skeleton={nodes.Object_18.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_19.geometry}
                    material={nodes.Object_19.material}
                    skeleton={nodes.Object_19.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_21.geometry}
                    material={nodes.Object_21.material}
                    skeleton={nodes.Object_21.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_23.geometry}
                    material={nodes.Object_23.material}
                    skeleton={nodes.Object_23.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_25.geometry}
                    material={nodes.Object_25.material}
                    skeleton={nodes.Object_25.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_27.geometry}
                    material={nodes.Object_27.material}
                    skeleton={nodes.Object_27.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_29.geometry}
                    material={nodes.Object_29.material}
                    skeleton={nodes.Object_29.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_31.geometry}
                    material={nodes.Object_31.material}
                    skeleton={nodes.Object_31.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_33.geometry}
                    material={nodes.Object_33.material}
                    skeleton={nodes.Object_33.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_35.geometry}
                    material={nodes.Object_35.material}
                    skeleton={nodes.Object_35.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_39.geometry}
                    material={nodes.Object_39.material}
                    skeleton={nodes.Object_39.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_41.geometry}
                    material={nodes.Object_41.material}
                    skeleton={nodes.Object_41.skeleton}
                  />
                </group>
              </group>
              <group
                position={[0, 0.86, 0]}
                rotation={[Math.PI / 2, 0, 0]}
                scale={0.07}
              >
                <group>
                  <primitive object={nodes.GLTF_created_1_rootJoint} />
                  <group />
                  <group />
                  <skinnedMesh
                    geometry={nodes.Object_65.geometry}
                    material={nodes.Object_65.material}
                    skeleton={nodes.Object_65.skeleton}
                  />
                  <skinnedMesh
                    geometry={nodes.Object_67.geometry}
                    material={nodes.Object_67.material}
                    skeleton={nodes.Object_67.skeleton}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/scene.gltf");
